/*-----------------------------------------------------------------------------+
 | This file is generated by NReact.Csx. Do not modify, changes could be lost. |
 +-----------------------------------------------------------------------------*/
using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;
using NReact;

#if NETFX_CORE
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Media;
#else
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media;
#endif

class TodoList : NComponent
{
  public override NElement Render()
  {
 	  var list = (IEnumerable<string>)Props.Items;
    
    return 
      New(typeof(StackPanel), null, 
       list.Select((i,idx) => New(typeof(TextBlock), new { Key = idx, Text = "* " + i })) 
      );
  }
}

class TodoApp : NComponent
{
  protected override object GetInitialState()
  {
    return new { Items = new string[0], Text = "" };
  }

  void OnChange(object sender, EventArgs args)
  {
    SetState(new { Text = ((TextBox)sender).Text });
  }

  static string[] AppendElement(string[] source, string element)
  {
    return source.Concat(new[] { element }).ToArray();    
  }

  void OnAdd(object sender, EventArgs args)
  {
    SetState(new { Items = AppendElement(State.Items, State.Text), Text = "" });
  }

  public override NElement Render()
  {
    return 
      New(typeof(StackPanel), new { HorizontalAlignment = "Center" }, 
        New(typeof(TextBlock), new { Text = "TODO", FontSize = 24.0, HorizontalAlignment = "Center" }), 
        New(typeof(TodoList), new { Items = State.Items }), 
        New(typeof(StackPanel), new { Orientation = "Horizontal" }, 
           New(typeof(TextBox), new { Text = State.Text, TextChanged = (TextChangedEventHandler)OnChange, Width = 200.0 }), 
           New(typeof(Button), new { Click = (RoutedEventHandler)OnAdd, Content = "Add #" + (State.Items.Length + 1) })
        )
      );
  }
}

using System.Linq;
using System.Collections.Generic;

#if NETFX_CORE
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Media;
#else
using System.Windows;
using System.Windows.Controls;
#endif


namespace NReact.Demos
{
  public class NMenu : NClass
  {
    #region must be autogenerated from CSX

    public static class Properties
    {
      public static readonly NProperty Focused = new NProperty(nameof(Focused));
      public static readonly NProperty Items = new NProperty(nameof(Items));
    }

    protected int Focused { get { return GetState(Properties.Focused, 0); } set { SetState(Properties.Focused, value); } }

    public string[] Items { get { return Get(Properties.Items, default(string[])); } set { Set(Properties.Items, value); } }

    #endregion

    void Clicked(int index)
    {
      Focused = index;
    }

    public override NElement Render()
    {
      var items = Items;

      return new NXaml<StackPanel>().
                   HorizontalAlignment(HorizontalAlignment.Center).
                   VerticalAlignment(VerticalAlignment.Center).
                   Children(new NXaml<StackPanel>().
                                  Orientation(Orientation.Horizontal).
                                  Children(Items.Select((m, index) => new NXaml<Button>(index).
                                                                            Content(m).
                                                                            Style(Focused == index ? "Focused" : "Unfocused").
                                                                            Click(() => Clicked(index)))),
                            new NXaml<TextBlock>().Style("P").Text("Selected: " + Items[Focused]));
    }
  }
}
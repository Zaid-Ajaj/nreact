using System.Text;

namespace NReact.Csx
{


  public partial class Parser
  {
    public StringBuilder _sb = new StringBuilder();
    int _start = 0;
    bool _active = true;
    string _source;

    public string Result { get { return _result ?? (_result = _sb.ToString()); } }
    string _result;

    public Parser(string text)
      : this(new Scanner(text))
    {
      _source = text;
      _sb.AppendLine("/*-----------------------------------------------------------------------------+");
      _sb.AppendLine(" | This file is generated by NReact.Csx. Do not modify, changes could be lost. |");
      _sb.AppendLine(" +-----------------------------------------------------------------------------*/");
    }

    void ResumeOut()
    {
      if (_active) 
        return;
      _active = true;

      _start = t.pos + t.val.Length;
    }

    void SuspendOut()
    {
      if (!_active)
        return;
      _active = false;

      var pos = la.pos;
      if (pos > _start)
      {
        var delta = _source.Substring(_start, pos - _start);
        _sb.Append(delta);
      }
    }

    void Out(string str)
    {
      _sb.Append(str);
    }

    void Out(string format, params object[] args)
    {
      _sb.AppendFormat(format, args);
    }
  }
}

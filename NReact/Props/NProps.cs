namespace NReact
{
  public class NProps
  {
    public static readonly NPropsStore Store = new NPropsStore();
    public static readonly int CONTENT = Store["<CONTENT>"];
    public static readonly int Key = Store["Key"];
    public static readonly int Ref = Store["Ref"];


    public static readonly int _DoubleTap = Store["_DoubleTap"];
    public static readonly int _DoubleTapped = Store["_DoubleTapped"];
    public static readonly int _DragEnter = Store["_DragEnter"];
    public static readonly int _DragLeave = Store["_DragLeave"];
    public static readonly int _DragOver = Store["_DragOver"];
    public static readonly int _DragStarting = Store["_DragStarting"];
    public static readonly int _Drop = Store["_Drop"];
    public static readonly int _Hold = Store["_Hold"];
    public static readonly int _Holding = Store["_Holding"];
    public static readonly int _KeyDown = Store["_KeyDown"];
    public static readonly int _KeyUp = Store["_KeyUp"];
    public static readonly int _ManipulationCompleted = Store["_ManipulationCompleted"];
    public static readonly int _ManipulationDelta = Store["_ManipulationDelta"];
    public static readonly int _ManipulationInertiaStarting = Store["_ManipulationInertiaStarting"];
    public static readonly int _ManipulationStarted = Store["_ManipulationStarted"];
    public static readonly int _ManipulationStarting = Store["_ManipulationStarting"];
    public static readonly int _MouseLeftButtonDown = Store["_MouseLeftButtonDown"];
    public static readonly int _MouseLeftButtonUp = Store["_MouseLeftButtonUp"];
    public static readonly int _MouseRightButtonDown = Store["_MouseRightButtonDown"];
    public static readonly int _MouseRightButtonUp = Store["_MouseRightButtonUp"];
    public static readonly int _MouseWheel = Store["_MouseWheel"];
    public static readonly int _PointerCanceled = Store["_PointerCanceled"];
    public static readonly int _PointerCaptureLost = Store["_PointerCaptureLost"];
    public static readonly int _PointerEntered = Store["_PointerEntered"];
    public static readonly int _PointerExited = Store["_PointerExited"];
    public static readonly int _PointerMoved = Store["_PointerMoved"];
    public static readonly int _PointerPressed = Store["_PointerPressed"];
    public static readonly int _PointerReleased = Store["_PointerReleased"];
    public static readonly int _PointerWheelChanged = Store["_PointerWheelChanged"];
    public static readonly int _RightTapped = Store["_RightTapped"];
    public static readonly int _Tap = Store["_Tap"];
    public static readonly int _Tapped = Store["_Tapped"];
    public static readonly int _TextInput = Store["_TextInput"];
    public static readonly int _TextInputStart = Store["_TextInputStart"];
    public static readonly int _TextInputUpdate = Store["_TextInputUpdate"];
    public static readonly int DoubleTap = Store["DoubleTap"];
    public static readonly int DoubleTapped = Store["DoubleTapped"];
    public static readonly int DragEnter = Store["DragEnter"];
    public static readonly int DragLeave = Store["DragLeave"];
    public static readonly int DragOver = Store["DragOver"];
    public static readonly int DragStarting = Store["DragStarting"];
    public static readonly int Drop = Store["Drop"];
    public static readonly int DropCompleted = Store["DropCompleted"];
    public static readonly int GotFocus = Store["GotFocus"];
    public static readonly int Hold = Store["Hold"];
    public static readonly int Holding = Store["Holding"];
    public static readonly int KeyDown = Store["KeyDown"];
    public static readonly int KeyUp = Store["KeyUp"];
    public static readonly int LostFocus = Store["LostFocus"];
    public static readonly int LostMouseCapture = Store["LostMouseCapture"];
    public static readonly int ManipulationCompleted = Store["ManipulationCompleted"];
    public static readonly int ManipulationDelta = Store["ManipulationDelta"];
    public static readonly int ManipulationInertiaStarting = Store["ManipulationInertiaStarting"];
    public static readonly int ManipulationStarted = Store["ManipulationStarted"];
    public static readonly int ManipulationStarting = Store["ManipulationStarting"];
    public static readonly int MediaCommand = Store["MediaCommand"];
    public static readonly int MouseEnter = Store["MouseEnter"];
    public static readonly int MouseLeave = Store["MouseLeave"];
    public static readonly int MouseLeftButtonDown = Store["MouseLeftButtonDown"];
    public static readonly int MouseLeftButtonUp = Store["MouseLeftButtonUp"];
    public static readonly int MouseMove = Store["MouseMove"];
    public static readonly int MouseRightButtonDown = Store["MouseRightButtonDown"];
    public static readonly int MouseRightButtonUp = Store["MouseRightButtonUp"];
    public static readonly int MouseWheel = Store["MouseWheel"];
    public static readonly int PointerCanceled = Store["PointerCanceled"];
    public static readonly int PointerCaptureLost = Store["PointerCaptureLost"];
    public static readonly int PointerEntered = Store["PointerEntered"];
    public static readonly int PointerExited = Store["PointerExited"];
    public static readonly int PointerMoved = Store["PointerMoved"];
    public static readonly int PointerPressed = Store["PointerPressed"];
    public static readonly int PointerReleased = Store["PointerReleased"];
    public static readonly int PointerWheelChanged = Store["PointerWheelChanged"];
    public static readonly int RightTapped = Store["RightTapped"];
    public static readonly int Tap = Store["Tap"];
    public static readonly int Tapped = Store["Tapped"];
    public static readonly int TextInput = Store["TextInput"];
    public static readonly int TextInputStart = Store["TextInputStart"];
    public static readonly int TextInputUpdate = Store["TextInputUpdate"];


    public static readonly int AcceptsReturn = Store["AcceptsReturn"];
    public static readonly int AllowDrop = Store["AllowDrop"];
    public static readonly int Background = Store["Background"];
    public static readonly int Blocks = Store["Blocks"];
    public static readonly int BorderBrush = Store["BorderBrush"];
    public static readonly int BorderThickness = Store["BorderThickness"];
    public static readonly int CacheMode = Store["CacheMode"];
    public static readonly int CanDrag = Store["CanDrag"];
    public static readonly int CanvasLeft = Store["Canvas.Left"];
    public static readonly int CanvasTop = Store["Canvas.Top"];
    public static readonly int CanvasZOrder = Store["Canvas.ZOrder"];
    public static readonly int CaretBrush = Store["CaretBrush"];
    public static readonly int CharacterSpacing = Store["CharacterSpacing"];
    public static readonly int Checked = Store["Checked"];
    public static readonly int Child = Store["Child"];
    public static readonly int Children = Store["Children"];
    public static readonly int Click = Store["Click"];
    public static readonly int ClickMode = Store["ClickMode"];
    public static readonly int Clip = Store["Clip"];
    public static readonly int ColumnDefinitions = Store["ColumnDefinitions"];
    public static readonly int Command = Store["Command"];
    public static readonly int CommandParameter = Store["CommandParameter"];
    public static readonly int CompositeMode = Store["CompositeMode"];
    public static readonly int Content = Store["Content"];
    public static readonly int ContentChanged = Store["ContentChanged"];
    public static readonly int ContentTemplate = Store["ContentTemplate"];
    public static readonly int Cursor = Store["Cursor"];
    public static readonly int DataContext = Store["DataContext"];
    public static readonly int DisplayMemberPath = Store["DisplayMemberPath"];
    public static readonly int Effect = Store["Effect"];
    public static readonly int Fill = Store["Fill"];
    public static readonly int FlowDirection = Store["FlowDirection"];
    public static readonly int FontFamily = Store["FontFamily"];
    public static readonly int FontSize = Store["FontSize"];
    public static readonly int FontStretch = Store["FontStretch"];
    public static readonly int FontStyle = Store["FontStyle"];
    public static readonly int FontWeight = Store["FontWeight"];
    public static readonly int Foreground = Store["Foreground"];
    public static readonly int GridColumn = Store["Grid.Column"];
    public static readonly int GridColumnSpan = Store["Grid.ColumnSpan"];
    public static readonly int GridRow = Store["Grid.Row"];
    public static readonly int GridRowSpan = Store["Grid.RowSpan"];
    public static readonly int Header = Store["Header"];
    public static readonly int Height = Store["Height"];
    public static readonly int HorizontalAlignment = Store["HorizontalAlignment"];
    public static readonly int HorizontalContentAlignment = Store["HorizontalContentAlignment"];
    public static readonly int HorizontalScrollBarVisibility = Store["HorizontalScrollBarVisibility"];
    public static readonly int Indeterminate = Store["Indeterminate"];
    public static readonly int Inlines = Store["Inlines"];
    public static readonly int IsChecked = Store["IsChecked"];
    public static readonly int IsDoubleTapEnabled = Store["IsDoubleTapEnabled"];
    public static readonly int IsEnabled = Store["IsEnabled"];
    public static readonly int IsHitTestVisible = Store["IsHitTestVisible"];
    public static readonly int IsHoldingEnabled = Store["IsHoldingEnabled"];
    public static readonly int IsReadOnly = Store["IsReadOnly"];
    public static readonly int IsRightTapEnabled = Store["IsRightTapEnabled"];
    public static readonly int IsTabStop = Store["IsTabStop"];
    public static readonly int IsTapEnabled = Store["IsTapEnabled"];
    public static readonly int IsTextSelectionEnabled = Store["IsTextSelectionEnabled"];
    public static readonly int IsThreeState = Store["IsThreeState"];
    public static readonly int Items = Store["Items"];
    public static readonly int ItemsPanel = Store["ItemsPanel"];
    public static readonly int ItemsSource = Store["ItemsSource"];
    public static readonly int ItemTemplate = Store["ItemTemplate"];
    public static readonly int Language = Store["Language"];
    public static readonly int LineHeight = Store["LineHeight"];
    public static readonly int LineStackingStrategy = Store["LineStackingStrategy"];
    public static readonly int ManipulationMode = Store["ManipulationMode"];
    public static readonly int Margin = Store["Margin"];
    public static readonly int MaxHeight = Store["MaxHeight"];
    public static readonly int MaxLength = Store["MaxLength"];
    public static readonly int MaxWidth = Store["MaxWidth"];
    public static readonly int MinHeight = Store["MinHeight"];
    public static readonly int MinWidth = Store["MinWidth"];
    public static readonly int Name = Store["Name"];
    public static readonly int Opacity = Store["Opacity"];
    public static readonly int OpacityMask = Store["OpacityMask"];
    public static readonly int Orientation = Store["Orientation"];
    public static readonly int OverflowContentTarget = Store["OverflowContentTarget"];
    public static readonly int Padding = Store["Padding"];
    public static readonly int Projection = Store["Projection"];
    public static readonly int RenderTransform = Store["RenderTransform"];
    public static readonly int RenderTransformOrigin = Store["RenderTransformOrigin"];
    public static readonly int RowDefinitions = Store["RowDefinitions"];
    public static readonly int SelectedIndex = Store["SelectedIndex"];
    public static readonly int SelectedItem = Store["SelectedItem"];
    public static readonly int SelectedText = Store["SelectedText"];
    public static readonly int SelectedValue = Store["SelectedValue"];
    public static readonly int SelectedValuePath = Store["SelectedValuePath"];
    public static readonly int SelectionBackground = Store["SelectionBackground"];
    public static readonly int SelectionChanged = Store["SelectionChanged"];
    public static readonly int SelectionForeground = Store["SelectionForeground"];
    public static readonly int SelectionLength = Store["SelectionLength"];
    public static readonly int SelectionStart = Store["SelectionStart"];
    public static readonly int ShowGridLines = Store["ShowGridLines"];
    public static readonly int Source = Store["Source"];
    public static readonly int Stretch = Store["Stretch"];
    public static readonly int Stroke = Store["Stroke"];
    public static readonly int StrokeDashCap = Store["StrokeDashCap"];
    public static readonly int StrokeDashOffset = Store["StrokeDashOffset"];
    public static readonly int StrokeEndLineCap = Store["StrokeEndLineCap"];
    public static readonly int StrokeLineJoin = Store["StrokeLineJoin"];
    public static readonly int StrokeMiterLimit = Store["StrokeMiterLimit"];
    public static readonly int StrokeStartLineCap = Store["StrokeStartLineCap"];
    public static readonly int StrokeThickness = Store["StrokeThickness"];
    public static readonly int Style = Store["Style"];
    public static readonly int TabIndex = Store["TabIndex"];
    public static readonly int TabNavigation = Store["TabNavigation"];
    public static readonly int Tag = Store["Tag"];
    public static readonly int Template = Store["Template"];
    public static readonly int Text = Store["Text"];
    public static readonly int TextAlignment = Store["TextAlignment"];
    public static readonly int TextChanged = Store["TextChanged"];
    public static readonly int TextDecoration = Store["TextDecoration"];
    public static readonly int TextDecorations = Store["TextDecorations"];
    public static readonly int TextOptionsTextFormattingMode = Store["TextOptions.TextFormattingMode"];
    public static readonly int TextOptionsTextHintingMode = Store["TextOptions.TextHintingMode"];
    public static readonly int TextOptionsTextRenderingMode = Store["TextOptions.TextRenderingMode"];
    public static readonly int TextTrimming = Store["TextTrimming"];
    public static readonly int TextWrapping = Store["TextWrapping"];
    public static readonly int Transform3D = Store["Transform3D"];
    public static readonly int Transitions = Store["Transitions"];
    public static readonly int Triggers = Store["Triggers"];
    public static readonly int Unchecked = Store["Unchecked"];
    public static readonly int UseLayoutRounding = Store["UseLayoutRounding"];
    public static readonly int VerticalAlignment = Store["VerticalAlignment"];
    public static readonly int VerticalContentAlignment = Store["VerticalContentAlignment"];
    public static readonly int VerticalScrollBarVisibility = Store["VerticalScrollBarVisibility"];
    public static readonly int Visibility = Store["Visibility"];
    public static readonly int Watermark = Store["Watermark"];
    public static readonly int Width = Store["Width"];
  }
}
